{
  "root": true,
  "env": {
    "node": true,
    "commonjs": true,
    "es6": true,
    "jest": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json"
  },
  "plugins": ["@typescript-eslint"],
  "extends": [
    "next/core-web-vitals",
    "plugin:@typescript-eslint/recommended",
    "prettier" // Add "prettier" last. This will turn off eslint rules conflicting with prettier. This is not what will format our code.
  ],
  "rules": {
    // I suggest you add those two rules:
    "no-console": 2,
    "no-restricted-syntax": [
      "error",
      {
        "selector": "CallExpression[callee.object.name='console'][callee.property.name!=/^(log|warn|error|info|trace)$/]",
        "message": "Unexpected property on console object was called"
      }
    ],
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/no-explicit-any": "error",
    "radix": "off",
    "arrow-parens": "error",
    "no-prototype-builtins": "off",
    "import/no-default-export": "off",
    "import/prefer-default-export": "off",
    "no-use-before-define": "off",
    "no-restricted-imports": [
      "error",
      {
        "patterns": ["@material-ui/*/*/*", "!@material-ui/core/test-utils/*"]
      }
    ],
    "@typescript-eslint/space-before-blocks": "off",
    "@typescript-eslint/no-floating-promises": "off",
    "@typescript-eslint/quotes": ["error", "single"],
    "@typescript-eslint/explicit-function-return-type": [
      "error",
      {
        "allowExpressions": true,
        "allowTypedFunctionExpressions": true
      }
    ],
    "@typescript-eslint/no-use-before-define": [
      "error",
      {
        "functions": false,
        "classes": true,
        "variables": true,
        "typedefs": true
      }
    ],
    "jsdoc/check-alignment": "off",
    "jsdoc/check-param-names": "off",
    "jsdoc/check-tag-names": "off",
    "jsdoc/check-types": "off",
    "jsdoc/implements-on-classes": "off",
    "jsdoc/newline-after-description": "off",
    "jsdoc/no-undefined-types": "off",
    "jsdoc/require-description-complete-sentence": "off",
    "jsdoc/require-hyphen-before-param-description": "off",
    "jsdoc/require-jsdoc": "off",
    "jsdoc/require-param": "off",
    "jsdoc/require-param-description": "off",
    "jsdoc/require-param-name": "off",
    "jsdoc/require-param-type": "off",
    "jsdoc/require-returns": "off",
    "jsdoc/require-returns-check": "off",
    "jsdoc/require-returns-description": "off",
    "jsdoc/require-returns-type": "off",
    "jsdoc/valid-types": "off",
    "semi": ["error", "always"],
    "no-unused-vars": [
      "warn",
      {
        "vars": "all",
        "args": "none",
        "ignoreRestSiblings": false
      }
    ],
    "jsx-a11y/anchor-is-valid": "off",
    "jsx-a11y/click-events-have-key-events": "off",
    "react/prop-types": "off",
    "react/destructuring-assignment": "off",
    "react/no-unused-prop-types": "error",
    "react/jsx-props-no-spreading": "off",
    "react/require-default-props": "off",
    "react/jsx-filename-extension": [
      "warn",
      {
        "extensions": [".ts", ".tsx"]
      }
    ]
  }
}
